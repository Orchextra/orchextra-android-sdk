/*
 * Created by Orchextra
 *
 * Copyright (C) 2017 Gigigo Mobile Services SL
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.2'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../config/jacoco.gradle'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.github.dcendents.android-maven'

group = rootProject.ext.group
version = rootProject.ext.version

ext {
    bintrayRepo = 'maven'
    bintrayName = 'com.gigigo.orchextra:core'

    publishedGroupId = 'com.gigigo.orchextra'
    libraryName = 'core'
    artifact = 'core'

    libraryDescription = 'Orchextra core'

    siteUrl = 'https://github.com/Orchextra/orchextra-android-sdk'
    gitUrl = 'https://github.com/Orchextra/orchextra-android-sdk.git'

    developerId = 'gigigo-desarrollo'
    developerName = 'Android Gigigo'
    developerEmail = 'gigigo.desarrollo@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

def CORE_API_URL = "CORE_API_URL"
def TRIGGER_API_URL = "TRIGGER_API_URL"
def NETWORK_LOG = "NETWORK_LOG"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        versionCode generateAutoVersionCode()
        versionName version
    }

    buildTypes {
        debug {
            debuggable true

            buildConfigField STRING, CORE_API_URL, '"https://core.s.orchextra.io/"'
            buildConfigField STRING, TRIGGER_API_URL, '"https://tr.s.orchextra.io/"'
            buildConfigField BOOLEAN, NETWORK_LOG, "true"

            version = "${rootProject.ext.version}-D"
            project.ext.libraryVersion = "${rootProject.ext.version}-D"
        }

        quality {
            debuggable true

            buildConfigField STRING, CORE_API_URL, '"https://core.q.orchextra.io/"'
            buildConfigField STRING, TRIGGER_API_URL, '"https://tr.q.orchextra.io/"'
            buildConfigField BOOLEAN, NETWORK_LOG, "true"

            version = "${rootProject.ext.version}-Q"
            project.ext.libraryVersion = "${rootProject.ext.version}-Q"
        }

        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (project.hasProperty('debug')) {

                buildConfigField STRING, CORE_API_URL, '"https://core.s.orchextra.io/"'
                buildConfigField STRING, TRIGGER_API_URL, '"https://tr.s.orchextra.io/"'
                buildConfigField BOOLEAN, NETWORK_LOG, "true"

                version = "${rootProject.ext.version}-D"
                project.ext.libraryVersion = "${rootProject.ext.version}-D"
            } else if (project.hasProperty('quality')) {

                buildConfigField STRING, CORE_API_URL, '"https://core.q.orchextra.io/"'
                buildConfigField STRING, TRIGGER_API_URL, '"https://tr.q.orchextra.io/"'
                buildConfigField BOOLEAN, NETWORK_LOG, "true"

                version = "${rootProject.ext.version}-Q"
                project.ext.libraryVersion = "${rootProject.ext.version}-Q"
            } else {

                buildConfigField STRING, CORE_API_URL, '"https://core.orchextra.io/"'
                buildConfigField STRING, TRIGGER_API_URL, '"https://tr.orchextra.io/"'
                buildConfigField BOOLEAN, NETWORK_LOG, "false"

                version = "${rootProject.ext.version}"
                project.ext.libraryVersion = "${rootProject.ext.version}"
            }
        }
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
    }

    androidExtensions {
        experimental = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dexcount {
    format = "list"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = true
    orderByMethodCount = false
    verbose = true
    maxTreeDepth = Integer.MAX_VALUE
    enableForInstantRun = false
    runOnEachAssemble = false
}

dependencies {
    implementation rootProject.ext.libraries.kotlinStdLib

    implementation rootProject.ext.libraries.appCompat
    implementation rootProject.ext.libraries.multidex
    implementation rootProject.ext.libraries.playServicesLocation

    implementation rootProject.ext.libraries.firebaseCore
    implementation rootProject.ext.libraries.firebaseMessaging

    implementation rootProject.ext.libraries.retrofit
    implementation rootProject.ext.libraries.retrofitMoshiConverter
    implementation rootProject.ext.libraries.okhttp3
    implementation rootProject.ext.libraries.okhttp3LoggingInterceptor

    implementation rootProject.ext.libraries.ormLite
    implementation rootProject.ext.libraries.ormLiteAndroid

    testImplementation rootProject.ext.testLibraries.mockitoKotlin
    testImplementation rootProject.ext.testLibraries.kluent
    testImplementation rootProject.ext.testLibraries.junit

    androidTestImplementation rootProject.ext.testLibraries.mockitoKotlin
    androidTestImplementation rootProject.ext.testLibraries.supportTestRunner
    androidTestImplementation rootProject.ext.testLibraries.supportTestRules
    androidTestImplementation rootProject.ext.testLibraries.espressoCore
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'