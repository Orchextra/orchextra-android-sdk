/*
 * Created by Orchextra
 *
 * Copyright (C) 2016 Gigigo Mobile Services SL
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply from: 'dependencies.gradle'
apply from: 'common_methods.gradle'

buildscript {
  ext.kotlin_version = '1.3.50'
  repositories {
    jcenter()
    google()
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'com.android.tools.build:gradle:3.5.1'
    classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
    classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
    classpath 'com.google.gms:google-services:4.3.2'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
  }
}

allprojects {

  repositories {
    google()
    jcenter()
    maven { url "http://jcenter.bintray.com" }
    maven { url 'https://dl.bintray.com/gigigo-desarrollo/maven' }
    maven { url 'https://jitpack.io' }
  }

  tasks.withType(Javadoc).all {
    enabled = false
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

import org.gradle.internal.os.OperatingSystem

task deployDebugLib(type: Exec) {
  workingDir "./"
  def command = "./gradlew"
  if (OperatingSystem.current().isWindows()) {
    command = "gradlew.bat"
  }

  commandLine command, "install", "bintrayUpload", "-Pdebug"
}

task deployQualityLib(type: Exec) {
  workingDir "./"
  def command = "./gradlew"
  if (OperatingSystem.current().isWindows()) {
    command = "gradlew.bat"
  }

  commandLine command, "install", "bintrayUpload", "-Pquality"
}

task deployLib(type: Exec) {
  workingDir "./"
  def command = "./gradlew"
  if (OperatingSystem.current().isWindows()) {
    command = "gradlew.bat"
  }

  commandLine command, "install", "bintrayUpload"
}